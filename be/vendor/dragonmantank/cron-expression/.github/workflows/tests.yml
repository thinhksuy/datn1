on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Tests

jobs:
  phpstan:
    name: PHPStan - PHP ${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [7.2, 7.3, 7.4, '8.0', 8.1, 8.2, 8.3, 8.4]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json, mbstring

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction

      - name: Start Static Analyze
        run: composer phpstan -n

  phpunit:
    name: PHPUnit - PHP ${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [7.2, 7.3, 7.4, 8.0, 8.1, 8.2, 8.3]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json, mbstring
          coverage: pcov
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get Composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction

      - name: Analyze & test
        run: composer test -- -v --coverage-clover=coverage.xml
